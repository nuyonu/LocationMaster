@using LocationMaster_FE.Services
@inject NavigationManager navigationManager
@inject PlaceService placeService

<div class="card img-fluid shadow location-card">
    <img class="card-img" src=@($"data:image/jpg;base64,{photo}") alt="test">
    <div class="card-img-overlay d-flex flex-column justify-content-between">
        <div>
            @for (int index = 0; index < new Random().Next(5); ++index)
            {
                <p class="card-text fa fa-heart text-danger"></p>
            }
        </div>
        <div>
            <h5 class="card-title text-white font-weight-bold ellipsis-overflow-2">@Name</h5>
            <p class="card-text text-white ellipsis-overflow-2">@Address</p>
            <p class="card-text text-white ellipsis-overflow-2">Price: $@Price</p>
        </div>
        <div class="d-flex justify-content-between">
            <button class="btn-sm btn-dark rounded-pill view-location" type="button" @onclick=GoToPlace>View location</button>
            <a href=@($"place?id=" + PlaceId.ToString()) class="card-link fa fa-arrow-right align-self-center"></a>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Guid Id { get; set; }

    [Parameter]
    public string Name { get; set; }

    [Parameter]
    public string Address { get; set; }

    [Parameter]
    public float Price { get; set; }

    [Parameter]
    public string Category { get; set; }

    [Parameter]
    public Guid PlaceId { get; set; }

    private string photo;

    protected override async Task OnInitializedAsync()
    {
        await GetFirstImage(PlaceId);
    }

    public async Task GetFirstImage(Guid id)
    {
        var img = await placeService.GetImagesOfPlace(id.ToString());
        var bytes = img.data.First().Value;
        photo = Convert.ToBase64String(bytes);
    }

    public void GoToPlace()
    {
        navigationManager.NavigateTo("/place?id=" + PlaceId.ToString());
    }
}