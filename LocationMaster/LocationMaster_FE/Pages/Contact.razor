@page "/contact"
@using LocationMaster_FE.Models
@using System.Security.Claims
@inject IMatToaster Toaster
@inject HttpClient http

<TopPage PageTitle="Contact" />

<section class="contact-section">
    <div class="container mt-n5">
        <div class="row pt-5">
            <div class="col-md-12">
                <h1>Your message matters!</h1>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6 mt-3">
                <p class="mb-3">Don't hesitate to contact us with any requests you may have. We guarantee to get back to you as soon as possible! Just introduce the details in your right.</p>
                <div>
                    Company:  <a href="https://LocationMaster.org">LocationMaster</a>
                </div>
                <div>
                    Address: <a href="#">Botoșani</a>
                </div>
                <div>
                    Phone:  <a href="#">+40727272727</a>
                </div>
                <div>
                    Website:  <a href="https://LocationMaster.org">LocationMaster.org</a>
                </div>
                <div>
                    Program: <a href="#">Mon to Sat: 08:30 AM - 11.00 PM</a>
                </div>
            </div>
            <div class="col-md-6">
                <form class="shake" role="form" method="post" id="contactForm" name="contact-form" data-toggle="validator">
                    <div class="form-group label-floating">
                        <label class="control-label" for="name">Name</label>
                        <input class="form-control" id="name" type="text" @bind-value="fullName" name="name" required data-error="Please enter your name">
                        <div class="help-block with-errors"></div>
                    </div>
                    <div class="form-group label-floating">
                        <label class="control-label" for="email">E-mail</label>
                        <input class="form-control" id="email" type="email" name="email" @bind-value="user.Email" required data-error="Please enter your Email">
                        <div class="help-block with-errors"></div>
                    </div>
                    <div class="form-group label-floating">
                        <label class="control-label">Subject</label>
                        <input class="form-control" id="msg_subject" type="text" name="subject" required data-error="Please enter your message subject">
                        <div class="help-block with-errors"></div>
                    </div>
                    <div class="form-group label-floating">
                        <label for="message" class="control-label">Message</label>
                        <textarea class="form-control" rows="3" id="message" name="message" required data-error="Write your message"></textarea>
                        <div class="help-block with-errors"></div>
                    </div>
                    <div class="form-submit sm-5">
                        <button class="btn contact-submit-button" type="button" @onclick="ContactUs" id="form-submit"><i class="material-icons mdi mdi-message-outline"></i> Send Message</button>
                        <div id="msgSubmit" class="h3 text-center hidden"></div>
                        <div class="clearfix"></div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authState { get; set; }

    private ClaimsPrincipal principal;

    private string fullName;

    private UserResponse user = new UserResponse();

    protected override async Task OnInitializedAsync()
    {

        if (authState != null)
        {
            principal = (await authState).User;
            try
            {
                var userId = principal.Claims.Where(c => c.Type == "userId").FirstOrDefault().Value;
                user = await http.GetJsonAsync<UserResponse>(AppConfig.BaseUrl + AppConfig.Port + "/api/v1.0/users/" + userId);
                fullName = user.LastName + " " + user.FirstName;
            }
            catch(Exception ex)
            {
                ex.ToString();
                fullName = "";
                user.Email = "your_email@example.com";
            }
            
        }
    }

    public void ContactUs()
    {
        Toaster.Add("You can't contact us right now. Coming soon", MatToastType.Danger, "Failed");
    }
}